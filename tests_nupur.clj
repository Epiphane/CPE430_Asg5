(ns tests_nupur)

(defn top-eval [x]
	(str x))

; Notes: Cannot use {} becuase it represents a map
(assert (= (top-eval `5) "5"))
(assert (= (top-eval `true) "true"))
(assert (= (top-eval `false) "false"))
(assert (= (top-eval `(* 4 2)) "8"))
(assert (= (top-eval `(- 5 4)) "1"))
(assert (= (top-eval `(+ 3 7)) "10"))
(assert (= (top-eval `(/ 6 2)) "3"))
(assert (= (top-eval `(<= 3 1)) "false"))
(assert (= (top-eval `(<= -1 1)) "true"))
(assert (= (top-eval `(* (+ 1 1) (- 6 (/ 4 2)))) "8"))

(assert (= (top-eval `(if false 2 3)) "3"))
(assert (= (top-eval `(if true 1 2)) "1"))
(assert (= (top-eval `(if true (+ 5 4) 2)) "9"))
(assert (= (top-eval `(if false (+ 5 4) (/ 6 2))) "3"))

(comment
;(test (top-eval '{eq? 1 2}) "false")
;(test (top-eval '{eq? false true}) "false")
;(test (top-eval '{eq? true true}) "true")
;(test (top-eval '{eq? {<= {+ 1 2} -5} {<= 2 1}}) "true")
;(test (top-eval '{eq? {fn {} 7} {fn {} 7}}) "false")
;(test (top-eval '{eq? 1 {<= 1 2}}) "false")

;(test (top-eval '{fn {} 4}) "#<procedure>")
;(test (top-eval '{{fn {} 4}}) "4")
;(test (top-eval '{{fn {} {+ {{fn {x y} {+ x y}} 1 {+ 1 1}} 3}}}) "6")
;(test (top-eval '{{fn {x} x} -1} ) "-1")
;(test (top-eval '{{fn {x} {+ x {/ 50 x}}} 10}) "15")
;(test (top-eval '{{fn {x y} {+ x y}} 3 6}) "9")
;(test (top-eval '{{fn {z y} {+ z y}} {+ 9 14} 98}) "121")
;(test (top-eval '{{fn {x y} {if {<= x 0} {if {<= y 0} -1 y} x}} 4 1}) "4")
;(test (top-eval '{{fn {x y} {if {<= x 0} {if {<= y 0} -1 y} x}} 0 3}) "3")
;(test (top-eval '{{fn {x y} {if {<= x 0} {if {<= y 0} -1 y} x}} 0 0}) "-1")
;(test (top-eval '{{fn {a b c d} {+ {+ a b} {+ c d}}} 1 2 3 4}) "10")

;(test (top-eval '{+ 1 {{fn {} 4}}}) "5")
;(test (top-eval '{+ {{fn {} 4}} {{fn {} 4}}}) "8")
;(test (top-eval '{+ {{fn {} 4}} {{fn {x y} {+ x y}} 3 6}}) "13")
;(test (top-eval '{{fn {g h} {{fn {g h} {+ g h}} 2 2}} 3 3}) "4")
;(test (top-eval '{{fn {x y} {{fn {n} {+ n x}} 1}} 2 3}) "3")
;(test (top-eval '{{{fn {x y} {fn {n} {+ n x}}} 1 2} 3}) "4")

;(test (top-eval '{with {z = 6} {+ z 10}}) "16")  
;(test (top-eval '{with {z = 7} {y = 9} {+ z y}}) "16")
;(test (top-eval '{with {z = {+ 9 14}} {y = 98} {+ z y}}) "121")

;(test/exn (top-eval '{+ 1 {fn {} 4}}) "one argument was not a number")
;(test/exn (top-eval '{* 1 {fn {} 5}}) "one argument was not a number")
;(test/exn (top-eval '{/ 1 {fn {} 6}}) "one argument was not a number")
;(test/exn (top-eval '{- 1 {fn {} 7}}) "one argument was not a number")
;(test/exn (top-eval '{<= 1 {fn {} 7}}) "one argument was not a number")
;(test/exn (top-eval '{fn {x x} 3}) "duplicate function parameter names")
;(test/exn (top-eval '{{fn {x y} {+ x y}} 1}) "wrong number of arguments")
;(test/exn (top-eval '{{fn {} 4} 1}) "wrong number of arguments")
;(test/exn (top-eval '{{fn {x y} {if x {if y -1 y} x}} 0 3 4}) "wrong number of arguments")
;(test/exn (top-eval '{{lambda {y} {+ x 10}} 10}) "unbound indentifier")
)